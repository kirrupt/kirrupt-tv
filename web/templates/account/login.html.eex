<div class="login_form" style="float:left;">
  Don't have an account? <a href="<%= account_path(@conn, :register) %>">Register</a>
  <%= form_for @conn, account_path(@conn, :login), [as: :login], fn f -> %>
    <dl>
      <dt><label for="username">Username</label></dt>
      <dd><%= text_input f, :username %></dd>

      <dt><label for="password">Password</label></dt>
      <dd><%= password_input f, :password %></dd>
    </dl>

    <div style="margin-top:10px;margin-bottom:10px;width:200px;">
      <%= checkbox f, :auto_login, [{:value, "y"}, {:checked, "checked"}] %>
    	Remember me
    </div>

    <p style="margin-left:20px">
      <%= submit "Login" %>
    </p>
  <% end %>
</div>

<div style="float:left;margin-top:100px;font-size:20px">
  or
</div>

<div style="float:right;margin:0px auto;width:300px;margin-top:100px">
  <div style="text-align:center;width:112px">
    <button class="g-signin"
    	data-scope="https://www.googleapis.com/auth/plus.login https://www.googleapis.com/auth/userinfo.profile https://www.googleapis.com/auth/userinfo.email"
    	data-requestvisibleactions="http://schemas.google.com/AddActivity"
    	data-clientId="842840966368-khjhm9op21jin6h9l6hvok8t81o4tnbf.apps.googleusercontent.com"
    	data-accesstype="offline"
    	data-callback="onSignInCallback"
    	data-theme="dark"
    	data-cookiepolicy="single_host_origin">
    </button>
  </div>
</div>
<div class="clear"></div>



<script type="text/javascript">
var helper = (function() {
var authResult = undefined;

return {
/**
 * Hides the sign-in button and connects the server-side app after
 * the user successfully signs in.
 *
 * @param {Object} authResult An Object which contains the access token and
 *   other authentication information.
 */
onSignInCallback: function(authResult) {
  if (authResult['access_token']) {
	// The user is signed in
	this.authResult = authResult;
	helper.connectServer();
  } else if (authResult['error']) {
	// There was an error, which means the user is not signed in.
	// As an example, you can troubleshoot by writing to the console:
	console.log('There was an error: ' + authResult['error']);
  }
  console.log('authResult', authResult);
},
/**
 * Calls the server endpoint to disconnect the app for the user.
 */
disconnectServer: function() {
  // Revoke the server tokens
  $.ajax({
	type: 'POST',
	url: '/disconnect',
	async: false,
	success: function(result) {
	  console.log('revoke response: ' + result);
	  location.reload();
	},
	error: function(e) {
	  console.log(e);
	}
  });
},
/**
 * Calls the server endpoint to connect the app for the user. The client
 * sends the one-time authorization code to the server and the server
 * exchanges the code for its own tokens to use for offline API access.
 * For more information, see:
 *   https://developers.google.com/+/web/signin/server-side-flow
 */
connectServer: function() {
  console.log(this.authResult.code);
  $.ajax({
	type: 'POST',
	url: '/connect?state=8F88INOU3KTFC51TSOCFK7H09GUFGPVO',
	contentType: 'application/octet-stream; charset=utf-8',
	success: function(result) {
	  console.log(result);
	  location.href='/login-with-google'
	},
	error: function(e) {
		console.log(e);
		helper.disconnectServer();
	},

	processData: false,
	data: this.authResult.code
  });
},
};
})();

/**
* Perform jQuery initialization and check to ensure that you updated your
* client ID.
*/
$(document).ready(function() {
//$('#disconnect').click(helper.disconnectServer);
});

/**
* Calls the helper method that handles the authentication flow.
*
* @param {Object} authResult An Object which contains the access token and
*   other authentication information.
*/
function onSignInCallback(authResult) {
helper.onSignInCallback(authResult);
}
</script>
