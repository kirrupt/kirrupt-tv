#!/usr/bin/env python3

services = [
  'tv',
  # 'auth',
  # 'recommendation',
  # 'images',
]

dev_services = [
  'mariadb',
  'ambassador'
]

with open('skaffold.yaml', 'w') as f:
  f.write("""apiVersion: skaffold/v1alpha2
kind: Config
build:
  artifacts:""")

  for s in services:
    f.write("""
  - imageName: registry.gitlab.com/kirrupt/kirrupt-tv-elixir/{name}
    workspace: ./{name}/
""".format(name=s))
  
  f.write("""
deploy:
  kubectl:
    manifests:
""")

  for s in services + dev_services:
      f.write("""    - ./{name}/kubernetes/*
""".format(name=s))

  f.write("""
profiles:
- name: staging
  deploy:
    kubectl:
      manifests:
        - ./tv/kubernetes/*
        - ./mariadb/kubernetes/*
""")

with open('.gitlab-ci.yml', 'w') as f:
  f.write("""stages:
  - build
  - test
""")

  for s in services:
    f.write("""build-{name}:
  image: docker:latest
  services:
    - docker:dind
  stage: build
  script:
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN registry.gitlab.com
    - docker pull registry.gitlab.com/kirrupt/kirrupt-tv-elixir/{name}:latest || true
    - docker build --cache-from registry.gitlab.com/kirrupt/kirrupt-tv-elixir/{name}:latest -t registry.gitlab.com/kirrupt/kirrupt-tv-elixir/{name}:$CI_COMMIT_SHA ./{name}/
    - docker push registry.gitlab.com/kirrupt/kirrupt-tv-elixir/{name}:$CI_COMMIT_SHA
    - docker tag registry.gitlab.com/kirrupt/kirrupt-tv-elixir/{name}:$CI_COMMIT_SHA registry.gitlab.com/kirrupt/kirrupt-tv-elixir/{name}:latest
    - docker push registry.gitlab.com/kirrupt/kirrupt-tv-elixir/{name}:latest
""".format(
      name=s
    ))

  f.write("""build-e2e:
  image: docker:latest
  services:
    - docker:dind
  stage: build
  script:
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN registry.gitlab.com
    - docker pull registry.gitlab.com/kirrupt/kirrupt-tv-elixir/ci-cypress:latest || true
    - docker build --cache-from registry.gitlab.com/kirrupt/kirrupt-tv-elixir/ci-cypress:latest -t registry.gitlab.com/kirrupt/kirrupt-tv-elixir/ci-cypress:$CI_COMMIT_SHA ./ci/cypress/
    - docker push registry.gitlab.com/kirrupt/kirrupt-tv-elixir/ci-cypress:$CI_COMMIT_SHA
    - docker tag registry.gitlab.com/kirrupt/kirrupt-tv-elixir/ci-cypress:$CI_COMMIT_SHA registry.gitlab.com/kirrupt/kirrupt-tv-elixir/ci-cypress:latest
    - docker push registry.gitlab.com/kirrupt/kirrupt-tv-elixir/ci-cypress:latest

test-e2e:
  image: registry.gitlab.com/kirrupt/kirrupt-tv-elixir/ci-cypress:$CI_COMMIT_SHA
  stage: test
  script:
    - scripts/ci-k3s.sh
    - k3s kubectl get nodes
    - docker ps
    - docker info
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN registry.gitlab.com
""")

  f.write("""    - KUBECONFIG=/etc/rancher/k3s/k3s.yaml skaffold deploy --images {list}
    - k3s kubectl wait deployment/ambassador --for condition=available --timeout=120s
    - k3s kubectl get service ambassador -o go-template='{{{{(index .spec.ports 0).nodePort}}}}'
    - retry --verbose -i 5s -c 200 scripts/ci-check-pod.sh tv
    - retry --verbose -i 5s -c 200 scripts/ci-check-pod.sh mariadb
    - KUBECONFIG=/etc/rancher/k3s/k3s.yaml retry --verbose -i 5s -c 200 make check-db
    - PORT=$(k3s kubectl get service ambassador -o go-template='{{{{(index .spec.ports 0).nodePort}}}}') retry --verbose -i 5s -c 200 curl --fail --show-error http://localhost:$PORT/account/login
    - KUBECONFIG=/etc/rancher/k3s/k3s.yaml make cypress-ci
""".format(
    list=','.join(['registry.gitlab.com/kirrupt/kirrupt-tv-elixir/{name}:$CI_COMMIT_SHA'.format(name=s) for s in services])
  ))

  f.write("""
deploy-staging:
  image: registry.gitlab.com/kirrupt/kirrupt-tv-elixir/ci-cypress:$CI_COMMIT_SHA
  stage: test
  script:
    - mkdir -p ~/.kube
    - echo $KUBE_STAGING_KUBECONFIG > ~/.kube/config
    - sleep 10000000
    - kubectl delete secret gitlab-auth || true
    - kubectl create secret docker-registry gitlab-auth --docker-server=registry.gitlab.com --docker-password=$CI_JOB_TOKEN --docker-username=gitlab-ci-token
    - skaffold deploy --images {list} -p staging
""".format(
    list=','.join(['registry.gitlab.com/kirrupt/kirrupt-tv-elixir/{name}:$CI_COMMIT_SHA'.format(name=s) for s in services])
  ))
